// Generated by gencpp from file main/FieldData.msg
// DO NOT EDIT!


#ifndef MAIN_MESSAGE_FIELDDATA_H
#define MAIN_MESSAGE_FIELDDATA_H

#include <ros/service_traits.h>


#include <main/FieldDataRequest.h>
#include <main/FieldDataResponse.h>


namespace main
{

struct FieldData
{

typedef FieldDataRequest Request;
typedef FieldDataResponse Response;
Request request;
Response response;

typedef Request RequestType;
typedef Response ResponseType;

}; // struct FieldData
} // namespace main


namespace ros
{
namespace service_traits
{


template<>
struct MD5Sum< ::main::FieldData > {
  static const char* value()
  {
    return "649f88740cfa9dc91cefbf73ed47045b";
  }

  static const char* value(const ::main::FieldData&) { return value(); }
};

template<>
struct DataType< ::main::FieldData > {
  static const char* value()
  {
    return "main/FieldData";
  }

  static const char* value(const ::main::FieldData&) { return value(); }
};


// service_traits::MD5Sum< ::main::FieldDataRequest> should match
// service_traits::MD5Sum< ::main::FieldData >
template<>
struct MD5Sum< ::main::FieldDataRequest>
{
  static const char* value()
  {
    return MD5Sum< ::main::FieldData >::value();
  }
  static const char* value(const ::main::FieldDataRequest&)
  {
    return value();
  }
};

// service_traits::DataType< ::main::FieldDataRequest> should match
// service_traits::DataType< ::main::FieldData >
template<>
struct DataType< ::main::FieldDataRequest>
{
  static const char* value()
  {
    return DataType< ::main::FieldData >::value();
  }
  static const char* value(const ::main::FieldDataRequest&)
  {
    return value();
  }
};

// service_traits::MD5Sum< ::main::FieldDataResponse> should match
// service_traits::MD5Sum< ::main::FieldData >
template<>
struct MD5Sum< ::main::FieldDataResponse>
{
  static const char* value()
  {
    return MD5Sum< ::main::FieldData >::value();
  }
  static const char* value(const ::main::FieldDataResponse&)
  {
    return value();
  }
};

// service_traits::DataType< ::main::FieldDataResponse> should match
// service_traits::DataType< ::main::FieldData >
template<>
struct DataType< ::main::FieldDataResponse>
{
  static const char* value()
  {
    return DataType< ::main::FieldData >::value();
  }
  static const char* value(const ::main::FieldDataResponse&)
  {
    return value();
  }
};

} // namespace service_traits
} // namespace ros

#endif // MAIN_MESSAGE_FIELDDATA_H
